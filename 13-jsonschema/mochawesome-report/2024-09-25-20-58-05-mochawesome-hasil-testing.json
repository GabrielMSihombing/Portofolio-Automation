{
  "stats": {
    "suites": 8,
    "tests": 14,
    "passes": 10,
    "pending": 0,
    "failures": 4,
    "start": "2024-09-25T13:58:01.254Z",
    "end": "2024-09-25T13:58:05.536Z",
    "duration": 4282,
    "testsRegistered": 14,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8db992a1-583f-4a95-9d95-38aefb409fb2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87cb6bee-7fe0-4590-a3c5-bef6e59ad96f",
          "title": "DELETE API",
          "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\delete.spec.js",
          "file": "\\src\\specs\\delete.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f4c8fd30-4602-43ee-9eac-718eb920c8d1",
              "title": "/DELETE/ - DELETE User",
              "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\delete.spec.js",
              "file": "\\src\\specs\\delete.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "check valid response status code",
                  "fullTitle": "DELETE API /DELETE/ - DELETE User check valid response status code",
                  "timedOut": false,
                  "duration": 579,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await delete_User_Schema(2);\nexpect(res.status).to.equal(204);",
                  "err": {},
                  "uuid": "c957ca3a-31f1-42eb-9f20-817743f501a4",
                  "parentUUID": "f4c8fd30-4602-43ee-9eac-718eb920c8d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check jsonSchema",
                  "fullTitle": "DELETE API /DELETE/ - DELETE User check jsonSchema",
                  "timedOut": false,
                  "duration": 418,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await delete_User_Schema(2);\nexpect(res.status).to.be.jsonSchema(delete_schema);",
                  "err": {},
                  "uuid": "cd307c2d-89d3-4920-9ddc-a9d7c4005fc0",
                  "parentUUID": "f4c8fd30-4602-43ee-9eac-718eb920c8d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c957ca3a-31f1-42eb-9f20-817743f501a4",
                "cd307c2d-89d3-4920-9ddc-a9d7c4005fc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 997,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebbecd62-c827-4789-a09d-dc244e576d1d",
          "title": "GET API",
          "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\get.spec.js",
          "file": "\\src\\specs\\get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d6a640ae-bac5-4c07-8a63-eb86ffeca849",
              "title": "/GET/<ID> - Get Single Todo",
              "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\get.spec.js",
              "file": "\\src\\specs\\get.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "check valid response status code",
                  "fullTitle": "GET API /GET/<ID> - Get Single Todo check valid response status code",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await get_single_user(2)\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "754a0d1f-02f2-4505-8d5e-054ea596525c",
                  "parentUUID": "d6a640ae-bac5-4c07-8a63-eb86ffeca849",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid response json schema",
                  "fullTitle": "GET API /GET/<ID> - Get Single Todo check valid response json schema",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await get_single_user(2)\n    expect(res.data).to.be.jsonSchema(get_single_schema)",
                  "err": {},
                  "uuid": "71e62248-6a01-4ade-9af7-fecfb59c24b6",
                  "parentUUID": "d6a640ae-bac5-4c07-8a63-eb86ffeca849",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "get nonexistent todo with ID 999",
                  "fullTitle": "GET API /GET/<ID> - Get Single Todo get nonexistent todo with ID 999",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n     await get_single_user(999)\n     throw Error\n     \n} catch (err) {\n     expect(err?.response?.status).to.equal(404)\n}",
                  "err": {},
                  "uuid": "e21bfccc-3aed-4263-95e8-07ff3ffc0a26",
                  "parentUUID": "d6a640ae-bac5-4c07-8a63-eb86ffeca849",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "get nonexistent todo with ID 0",
                  "fullTitle": "GET API /GET/<ID> - Get Single Todo get nonexistent todo with ID 0",
                  "timedOut": false,
                  "duration": 33,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n     await get_single_user(0)\n     throw Error\n     \n} catch (err) {\n     expect(err?.response?.status).to.equal(404)\n}",
                  "err": {},
                  "uuid": "c14154bb-62e7-4087-ae0f-3f8415c259c4",
                  "parentUUID": "d6a640ae-bac5-4c07-8a63-eb86ffeca849",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "754a0d1f-02f2-4505-8d5e-054ea596525c",
                "71e62248-6a01-4ade-9af7-fecfb59c24b6",
                "e21bfccc-3aed-4263-95e8-07ff3ffc0a26",
                "c14154bb-62e7-4087-ae0f-3f8415c259c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "88745f27-d59c-4436-bda9-c22b7f6a1621",
          "title": "POST API",
          "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\post.spec.js",
          "file": "\\src\\specs\\post.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "547288cc-c308-495d-a341-95c7c37dc16b",
              "title": "/POST/ - Post User",
              "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\post.spec.js",
              "file": "\\src\\specs\\post.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "check valid response status code",
                  "fullTitle": "POST API /POST/ - Post User check valid response status code",
                  "timedOut": false,
                  "duration": 380,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await createUser(payloadUser);\nexpect(res.status).to.equal(201);",
                  "err": {},
                  "uuid": "97696eb3-f575-4ca5-bf6a-de663a199483",
                  "parentUUID": "547288cc-c308-495d-a341-95c7c37dc16b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid jsonSchema",
                  "fullTitle": "POST API /POST/ - Post User check valid jsonSchema",
                  "timedOut": false,
                  "duration": 389,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await createUser(payloadUser);\n            expect(res.data).to.be.jsonSchema(post_user_schema)",
                  "err": {},
                  "uuid": "e16d4268-f0df-4a88-98f1-a259d94f5cce",
                  "parentUUID": "547288cc-c308-495d-a341-95c7c37dc16b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid when the name is number",
                  "fullTitle": "POST API /POST/ - Post User check valid when the name is number",
                  "timedOut": false,
                  "duration": 384,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const res = await createUser(payloadUser2);\n            expect(res.status).to.equal(400)",
                  "err": {
                    "message": "AssertionError: expected 201 to equal 400",
                    "estack": "AssertionError: expected 201 to equal 400\n    at Context.<anonymous> (file:///D:/Bootcamp_QA/tugas-gabriel/13-jsonschema/src/specs/post.spec.js:37:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 201\n+ 400\n"
                  },
                  "uuid": "426f7f50-3cb9-4ffb-8d5d-183954381663",
                  "parentUUID": "547288cc-c308-495d-a341-95c7c37dc16b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid when the name null",
                  "fullTitle": "POST API /POST/ - Post User check valid when the name null",
                  "timedOut": false,
                  "duration": 393,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const res = await createUser(payloadUser3);\n            expect(res.status).to.equal(400)",
                  "err": {
                    "message": "AssertionError: expected 201 to equal 400",
                    "estack": "AssertionError: expected 201 to equal 400\n    at Context.<anonymous> (file:///D:/Bootcamp_QA/tugas-gabriel/13-jsonschema/src/specs/post.spec.js:45:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 201\n+ 400\n"
                  },
                  "uuid": "eeac6f75-c46c-4bac-8748-4b8f2fca2091",
                  "parentUUID": "547288cc-c308-495d-a341-95c7c37dc16b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97696eb3-f575-4ca5-bf6a-de663a199483",
                "e16d4268-f0df-4a88-98f1-a259d94f5cce"
              ],
              "failures": [
                "426f7f50-3cb9-4ffb-8d5d-183954381663",
                "eeac6f75-c46c-4bac-8748-4b8f2fca2091"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1546,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81891b8f-bf01-4d88-a91c-80ef27e27709",
          "title": "PUT API",
          "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\put.spec.js",
          "file": "\\src\\specs\\put.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "98b16566-a163-4161-b71a-fbeaa5a63c2d",
              "title": "/PUT/ - Update User",
              "fullFile": "D:\\Bootcamp_QA\\tugas-gabriel\\13-jsonschema\\src\\specs\\put.spec.js",
              "file": "\\src\\specs\\put.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "check valid response status code",
                  "fullTitle": "PUT API /PUT/ - Update User check valid response status code",
                  "timedOut": false,
                  "duration": 422,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update_User_Schema(2, validupdateUser);\nexpect(res.status).to.equal(200);",
                  "err": {},
                  "uuid": "6f3de192-480f-46a6-ad45-a97da51d70a9",
                  "parentUUID": "98b16566-a163-4161-b71a-fbeaa5a63c2d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid jsonSchema",
                  "fullTitle": "PUT API /PUT/ - Update User check valid jsonSchema",
                  "timedOut": false,
                  "duration": 392,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update_User_Schema(2, validupdateUser);\n            console.log (res.data)\n            expect(res.data).to.be.jsonSchema(put_user_schema)",
                  "err": {},
                  "uuid": "b1a087de-023d-485f-a95d-593fec8b75ff",
                  "parentUUID": "98b16566-a163-4161-b71a-fbeaa5a63c2d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "check valid update when the name is null",
                  "fullTitle": "PUT API /PUT/ - Update User check valid update when the name is null",
                  "timedOut": false,
                  "duration": 391,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update_User_Schema(2, invalidupdateUser);\n            expect(res.status).to.equal(400)",
                  "err": {
                    "message": "AssertionError: expected 200 to equal 400",
                    "estack": "AssertionError: expected 200 to equal 400\n    at Context.<anonymous> (file:///D:/Bootcamp_QA/tugas-gabriel/13-jsonschema/src/specs/put.spec.js:35:35)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 200\n+ 400\n"
                  },
                  "uuid": "3a18c036-3e5b-473f-ae8b-12c0b0e3e23f",
                  "parentUUID": "98b16566-a163-4161-b71a-fbeaa5a63c2d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check update data with parameter id is 999",
                  "fullTitle": "PUT API /PUT/ - Update User Check update data with parameter id is 999",
                  "timedOut": false,
                  "duration": 394,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const res = await update_User_Schema(999, validupdateUser);\n    throw res    \n     } catch (err) {\n       expect(err?.response?.status).to.equal(404)\n    }",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 404",
                    "estack": "AssertionError: expected undefined to equal 404\n    at Context.<anonymous> (file:///D:/Bootcamp_QA/tugas-gabriel/13-jsonschema/src/specs/put.spec.js:44:53)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": null
                  },
                  "uuid": "9e9c4cfd-d053-42be-927e-506ac24b515e",
                  "parentUUID": "98b16566-a163-4161-b71a-fbeaa5a63c2d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f3de192-480f-46a6-ad45-a97da51d70a9",
                "b1a087de-023d-485f-a95d-593fec8b75ff"
              ],
              "failures": [
                "3a18c036-3e5b-473f-ae8b-12c0b0e3e23f",
                "9e9c4cfd-d053-42be-927e-506ac24b515e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1599,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]-[name]-hasil-testing",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportFilename": "[datetime]-[name]-hasil-testing",
        "timestamp": "yyyy-mm-dd-HH-MM-ss"
      },
      "version": "6.2.0"
    }
  }
}